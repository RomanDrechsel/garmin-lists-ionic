apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            storeFile file('/home/roman/MyStuff/Coding/Github/GarminLists/Android-Keystore/release.jks')
            storePassword 'EbYfTzIt-1L_g1Zjf2bP0gANMBhPj2NBgk4d'
            keyPassword 'F40tJWFp7DjunAow-vtGCA5gsM-SLu6l89dp'
            keyAlias 'key0'
        }
    }
    namespace "de.romandrechsel.lists"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId 'de.romandrechsel.lists'
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 118
        versionName "2025.02.2300"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
            // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
        proguardFiles
    }
    buildTypes {
        release {
            manifestPlaceholders appname: '@string/app_name'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
        debug {
            manifestPlaceholders appname: '@string/app_name_debug'
            applicationIdSuffix '.dev'
            versionNameSuffix '-d'
        }
    }
}

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
    implementation 'com.garmin.connectiq:ciq-companion-app-sdk:2.2.0'
    implementation 'com.google.code.gson:gson:2.10.1'
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch (Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
